#!/bin/bash

version="1.1.0"
scriptName="vsc_manager"

C_NULL="\e[0m"
C_CYAN="\e[36m"
C_RED="\e[31m"
C_YELLOW="\e[1;33m"

if [ -z "$1" ]; then

  echo -e "This is VINTAGE STORY CONTAINER MANAGER!"
  echo -e "$C_YELLOW VERSION: $version $C_NULL"
  echo "Awailable commands:"
  echo -e "1) $C_CYAN$scriptName container_install <?image_tag> <?port>$C_NULL - download image (if empty and start container)"
  echo -e "2) $C_CYAN$scriptName container_start$C_NULL - start container"
  echo -e "3) $C_CYAN$scriptName container_stop$C_NULL - stop container"
  echo -e "4) $C_CYAN$scriptName container_restart$C_NULL - restart container"
  echo -e "5) $C_CYAN$scriptName server_update$C_NULL - download new server version and install inside container"
  echo -e "6) $C_CYAN$scriptName server_backup$C_NULL - create new save backup"
  echo -e "7) $C_CYAN$scriptName server_mod_install <?download_url>$C_NULL - install mod into server inside container"
  echo -e "8) $C_CYAN$scriptName container_attach$C_NULL - go to inside container"
  echo -e "9) $C_CYAN$scriptName container_cleanup <?image_tag>$C_NULL - stop container, remove container, remove image"
  echo -e "10) $C_CYAN$scriptName server_status$C_NULL - view status server"
  echo -e "11) $C_CYAN$scriptName server_restart$C_NULL - restart server"

  exit
fi

#$1 - param name ; $2 - param value ; $3 - default value
setUpParam() {
  param=$2
  if [ -z "$2" ]; then
      read -p "Set $1 (default: $3): " param
  fi
  if [ -z "$param" ]; then
    param=$3
  fi
  echo -e "$param"
}

#$1 - array ref $2 - param name ; $3 - example value
setUpArrayParams() {
  local -n res=$1
  agree="y"
  while [[ $agree == "y" ]]
  do
    read -p "Do you want to add another one $2? (Press ENTER for skip or type 'y' for continue): " agree
    if [[ $agree == "y" ]]; then
      read -p "Set $2 param (example: $3): " newValue
      res+=( $newValue )
    fi
  done
}

install() {
  local ports
  setUpArrayParams ports "port" "42420"
  declare -p ports
  strPorts=""
  for port in "${ports[@]}"
  do
    strPorts+="-p $port:$port "
  done
  strPorts+="-p $2:$2"
  echo $strPorts

  sudo docker run -d --name vintage_story_server $strPorts --restart=unless-stopped -v vintage_story_server:/var/vintage_story barenad/vintage_story_server:$1
  sudo docker exec -u root -it vintage_story_server apt install -y tzdata
  sudo docker ps -a
}

saveServer() {
  sudo docker exec -it vintage_story_server vs_server command autosavenow
  sleep 10
}

cleanup() {
  echo "Cleanup container..."
  sudo docker stop vintage_story_server
  sudo docker rm vintage_story_server
  echo "Cleanup image..."
  sudo docker rmi barenad/vintage_story_server:$1
  echo "\nResult:\n\n"
  sudo docker ps -a
  echo
  sudo docker images
  echo
  sudo docker volume ls
  echo
  echo "Successfully completed!"
}

case $1 in
    "container_install")
        install $(setUpParam "image_tag" "$2" "any_net_7") $(setUpParam "port" "$3" "42420")
        ;;
    "container_start")
        sudo docker start vintage_story_server
        ;;
    "container_stop")
        saveServer
        sudo docker stop vintage_story_server
        ;;
    "container_restart")
        saveServer
        sudo docker restart vintage_story_server
        ;;
    "server_update")
        sudo docker exec -it vintage_story_server vs_server stop
        sudo docker exec -u root -it vintage_story_server vs_server_update
        ;;
    "server_backup")
        saveServer
        sudo docker exec -it vintage_story_server vs_backup
        ;;
    "server_mod_install")
        sudo docker exec -it vintage_story_server vs_mod_install "$2"
        ;;
    "container_attach")
        sudo docker exec -u root -it vintage_story_server bash
        ;;
    "container_cleanup")
        saveServer
        cleanup $(setUpParam "image_tag" "$2" "any_net_7")
        ;;
    "server_status")
        sudo docker exec -it vintage_story_server vs_server status
        ;;
    "server_restart")
        saveServer
        sudo docker exec -it vintage_story_server vs_server restart
        ;;
    *)
      echo -e "$C_RED Unknown command!$C_NULL"
      ;;
esac
